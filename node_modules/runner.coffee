spawn = require('child_process').spawn
exec = require('child_process').exec
makeRequest = require('make_request')
dir = "/tmp/progs/"
resp = ['/attempts/judge_results','/admin/problems/judge_results','/problems/judge_results']

runner = (id,return_type,timeout,cases, channel)->
  for key, value of cases
    do(key, value)->
      value.input = value.input.concat("\n") if value.input.slice(-1) != "\n"
      run_exe = spawn dir+id
      run_exe.stdin.write value.input
      tim_exe = exec "ruby timeout.rb #{run_exe.pid} #{timeout}", (error, stdout, stderr) ->
        if stdout.trim() == '1'
          makeRequest({'id':id,'error_code':2, 'stderr':'timeout'}, resp[return_type])

      run_exe.stdout.on('data', (data) ->
        if return_type == 0
          result = if (data.toString()==value.output) then true else false
        else
          result = data.toString()
        makeRequest({'id':id,'error_code':null,'case':key,'result':result, 'channel':channel}, resp[return_type]))

      run_exe.stderr.on('data', (data) ->
        makeRequest({'id':id,'error_code':1,'stderr':data.toString()}, resp[return_type]))


module.exports = runner



#if stderr
#  stderr = "timedout after #{timeout} seconds" if error['signal'] == 'SIGKILL'
#  if return_type == 0
#    makeRequest({'id':id,'stderr':stderr, 'error':error},'/attempts/judge_results')
#  else if return_type == 1
#    makeRequest({'id':id,'stderr':stderr, 'error':error},'/admin/problems/judge_results')
#else
#  if return_type == 0
#    result = if (stdout==value.output) then true else false
#    makeRequest({'id':id,'case':key,'result':result},'/attempts/judge_results')
#  else if return_type == 1
#    makeRequest({'id':id,'case':key,'result':stdout},'/admin/problems/judge_results')
#  else if return_type == 2
#    makeRequest({'id':id,'case':key,'result':stdout},'/problems/judge_results')
